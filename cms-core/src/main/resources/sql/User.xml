<?xml version="1.0" encoding="UTF-8"?>      
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"      
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
     <mapper namespace="org.snow.cms.model.User">
     	<resultMap type="User" id="userMap" autoMapping="true">
     		<id property="id" column="id" />
     		<result property="username" column="username" />
     		<result property="password" column="password" />
     		<result property="nickname" column="nickname" />
     		<result property="phone" column="phone" /> 
     		<result property="email" column="email"/> 
     		<result property="status" column="status"/>
     		<result property="createDate" column="create_date"/>           
     	</resultMap>
     	<resultMap type="UserRole" id="urMap" autoMapping="true">
     		<id property="id" column="id"/>
     		<association property="user" javaType="User">
     			<id property="id" column="u_id"/>
     			<result property="username" column="username" />
	     		<result property="password" column="password" />
	     		<result property="nickname" column="nickname" />
	     		<result property="phone" column="phone" /> 
	     		<result property="email" column="email"/> 
	     		<result property="status" column="status"/>
	     		<result property="createDate" column="create_date"/>        
     		</association>
     		<association property="role" javaType="Role">
     			<id property="id" column="r_id"/>
     			<result property="name" column="name"/>
     			<result property="roleType" column="role_type" />
     		</association>
     	</resultMap>
     	<resultMap type="UserGroup" id="ugMap" autoMapping="true">
     		<id property="id" column="id"/>
     		<association property="user" javaType="User">
     			<id property="id" column="u_id"/>
     			<result property="username" column="username" />
	     		<result property="password" column="password" />
	     		<result property="nickname" column="nickname" />
	     		<result property="phone" column="phone" /> 
	     		<result property="email" column="email"/> 
	     		<result property="status" column="status"/>
	     		<result property="createDate" column="create_date"/>        
     		</association>
     		<association property="group" javaType="Group">
     			<id property="id" column="g_id"/>
     			<result property="name" column="name"/>
     			<result property="descr" column="descr" />
     		</association>
     	</resultMap>
     	
     	<insert id="add" parameterType="User" useGeneratedKeys="true" keyProperty="id">
     		insert into t_user(username,password,nickname,phone,email,status) 
     			values (#{username},#{password},#{nickname},#{phone},#{email},#{status})
     	</insert>
     	
     	<update id="update" parameterType="User">
     		update t_user set username= #{username}, password= #{password}, nickname= #{nickname},
     				 phone= #{phone}, email=#{email}, status=#{status} where id=#{id}
     	</update>
     	
     	<delete id="delete" parameterType="int">
     		delete from t_user where id= #{userId}
     	</delete>
     	
     	<select id="load" parameterType="int" resultMap="userMap">
     		select id, username, password, nickname, phone, email, status, create_date from t_user where id= #{id} 
     	</select>
     	
     	<select id="load_by_username" parameterType="map" resultMap="userMap">
     		select id, username, password, nickname, phone, email, status, create_date from t_user where 1=1
     		<if test="username!=null">
     			and username=#{username}
     		</if> 
     	</select>
     	
     	<select id="list" resultMap="userMap">
     		select id, username, password, nickname, phone, email, status, create_date from t_user where 1=1
     	</select>
     	
     	<select id="find" parameterType="map" resultMap="userMap">
     		select id, username, password, nickname, phone, email, status, create_date from t_user where 1=1
     		<if test="username!=null">
     			and username like '%'+#{username}+'%' or nickname like '%'+#{username}+'%'
     		</if>
     		<if test="sort!=null">
     			 order by ${sort}
     			 <if test="order!=null">
     			 	${order}
     			 </if>
     		</if>
     		 limit #{pageOffset},#{pageSize}
     	</select>
     	<select id="find_count" parameterType="map" resultType="long">
     		select count(*) from t_user where 1=1
     		<if test="username!=null">
     			and username like '%'+#{username}+'%' or nickname like '%'+#{username}+'%'
     		</if>
     	</select>
     	<select id="load_user_role" parameterType="map" resultMap="urMap">
     		SELECT ur.id,u.id AS u_id,u.username,u.password,u.nickname,u.phone,u.email,u.status,u.create_date,
				r.id AS r_id,r.name,r.role_type FROM t_user u, t_role r, t_user_role ur 
				WHERE ur.r_id=r.id AND ur.u_id=u.id
     		<if test="userId!=null">
     			AND ur.u_id=#{userId}
     		</if>
     		<if test="roleId!=null">
     			AND ur.r_id=#{roleId}
     		</if>
     	</select>
     	<select id="load_user_group" parameterType="map" resultMap="ugMap">
     		SELECT ug.id,u.id AS u_id,u.username,u.password,u.nickname,u.phone,u.email,u.status,u.create_date,
				g.id AS g_id,g.name,g.descr FROM t_user u, t_group g, t_user_group ug
				WHERE ug.g_id=g.id AND ug.u_id=u.id
     		<if test="userId!=null">
     			AND ug.u_id=#{userId}
     		</if>
     		<if test="groupId!=null">
     			AND ug.g_id=#{groupId}
     		</if>
     	</select>
     	<select id="list_role_users_by_roleId" resultMap="userMap" parameterType="map">
     		SELECT u.* FROM t_user u, t_role r, t_user_role ur WHERE u.id=ur.u_id AND r.id=ur.r_id 
     		<if test="roleId!=null">
     			AND r.id = #{roleId}
     		</if>
     	</select>
     	<select id="list_role_users_by_roleType" resultMap="userMap" parameterType="map">
     		SELECT u.* FROM t_user u, t_role r, t_user_role ur WHERE u.id=ur.u_id AND r.id=ur.r_id 
     		<if test="roleType!=null">
     			AND r.role_type=#{roleType}
     		</if>
     	</select>
     	<select id="list_group_users_by_groupId" resultMap="userMap" parameterType="map">
     		SELECT u.* FROM t_user u,t_group g,t_user_group ug WHERE u.id=ug.u_id AND g.id=ug.g_id
     		<if test="groupId!=null">
     			AND g.id = #{groupId}
     		</if>
     	</select>
     	<insert id="add_user_role" parameterType="map">
     		insert into t_user_role (u_id,r_id) values (#{userId},#{roleId})
     	</insert>
     	<insert id="add_user_group" parameterType="map">
     		insert into t_user_group (u_id,g_id) values(#{userId},#{groupId})
     	</insert>
     	<delete id="delete_user_roles" parameterType="int">
     		delete from t_user_role where u_id=#{userId}
     	</delete>
     	<delete id="delete_user_groups" parameterType="int">
     		delete from t_user_group where u_id=#{userId}
     	</delete>
     	<delete id="delete_user_role" parameterType="map">
     		delete from t_user_role where 1=1
     		<if test="userId!=null">
     			and u_id=#{userId}
     		</if>
     		<if test="roleId!=null">
     			and r_id=#{roleId}
     		</if>
     	</delete>
     	<delete id="delete_user_group" parameterType="map">
     		delete from t_user_group where 1=1
     		<if test="userId!=null">
     			and u_id=#{userId}
     		</if>
     		<if test="groupId!=null">
     			and g_id=#{groupId}
     		</if>
     	</delete>
     </mapper>
 